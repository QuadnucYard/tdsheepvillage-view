var W=Object.defineProperty;var X=(c,i,t)=>i in c?W(c,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[i]=t;var e=(c,i,t)=>(X(c,typeof i!="symbol"?i+"":i,t),t);import{b as $,c as j,d as z,e as J,f as Q,g as q,h as Z,j as tt}from"./element-plus.c1dd77d3.js";import{G as S}from"./GlobalData.15756761.js";import{G as k,B as et,T as w,a as at,b as lt,W as C,S as st,c as y,d as g,C as it,e as ot,f as rt,A as nt,g as ut,h as dt,i as mt}from"./unit.8181a508.js";import{B as v,G as P,f as _t,a as ht}from"./format.31ee9e47.js";import{_ as U}from"./lodash.c9626c09.js";import{J as ft,a0 as gt,j as x,Q as G,R as s,u as r,o as T,X as a,c as H,a6 as B,F as O,a as _,W as p,V as N}from"./@vue.19ab7578.js";import"./lodash-es.6689e95d.js";import"./@vueuse.ad796436.js";import"./@element-plus.517593ad.js";import"./@popperjs.c75af06c.js";import"./@ctrl.43a4208a.js";import"./dayjs.5fc4293f.js";import"./@xmldom.03ad400b.js";import"./async-validator.dee29e8b.js";import"./memoize-one.297ddbcb.js";import"./escape-html.1d60d822.js";import"./normalize-wheel-es.ed76fb12.js";import"./@floating-ui.b3b4f581.js";import"./x2js.53e2bce6.js";const M=class extends v{constructor(){super();e(this,"doneTime");e(this,"m_doneTimer");e(this,"m_fgUpgrade");e(this,"m_bgUpgrade");e(this,"m_upgradeComplete");e(this,"m_halo");e(this,"m_buildTime")}get buildingData(){return this.m_data}get range(){return this.buildingData.range}initBuilding(){}get skillInfo(){let t,l=0,o=null,D=null,E="";if(this.skills==null)return E;let u=[];for(t in this.skills)u.push(this.skills[t]);for(u.sort((n,R)=>n[P.DATA_KEY_INDEX]-R[P.DATA_KEY_INDEX]),l=0;l<u.length;l++)o=u[l],D=o.skillInfo,D!=""&&(E!=""&&(E+=`
`),E+=D);return E==""&&(E=this.buildingData.info),E}};let f=M;e(f,"RATE_TIME",1e5),e(f,"CHECK_RATE",k.REFRESH_RATE),e(f,"COOLDOWN_NUM",M.RATE_TIME/M.CHECK_RATE),e(f,"FIRE_TIME",.1),e(f,"BUILDING","building"),e(f,"STATUS_BUILD","statusBuild"),e(f,"FRAME_COMPLETE","com"),e(f,"RES_UPGRADE","upgradeTower"),e(f,"BUILD_SET",0),e(f,"BUILD_ING",1),e(f,"BUILD_HAD",2);class F extends v{constructor(t){super();e(this,"source");e(this,"target");e(this,"targetPoint");e(this,"damage");e(this,"range");e(this,"attackType");this.m_data=et.getOnlyExample().getData(t),this.attackType=w.EFFECT_TYPE_ALL}get srcTower(){return this.source}get srcTrap(){return this.source}get bulletData(){return this.m_data}}e(F,"MAX_LIFE_FRAME",50),e(F,"MAX_HEIGHT",5e3);class b extends f{constructor(t){super();e(this,"m_dir");e(this,"castEvent");e(this,"m_cooldownNum");e(this,"target");e(this,"m_level");e(this,"upgradeLevel");e(this,"m_exp");e(this,"offer");e(this,"gem");e(this,"m_levelText");e(this,"m_gemComplete");e(this,"m_attackType");e(this,"slowf_tower",1);this.m_data=lt.getOnlyExample().getData(t),this.initTower(),this.level=1}get towerData(){return this.m_data}initTower(){this.initSkills(),this.initStatuses(),this.statuses[C.KIND_DAMAGE]=1,this.statuses[C.KIND_RATE]=1,this.statuses[C.KIND_RANGE]=1,this.initBuilding()}initSkills(){let t=null,l=null,o;if(this.skills=new Object,this.data.skillPackageId!=""&&(t=new st(this.data.skillPackageId,this.data.skillPackageLevel),t!=null&&t.skillsPackageData!=null))for(o of t.skillsPackageData.skillsList)l=new y(o,t.level,this).getSubClasses(),this.skills[l.data.kindId]=l;if(this.gem){if(t=this.gem.gemData.getSkillPackage(this.data.id),t!=null&&t.skillsPackageData!=null)for(o of t.skillsPackageData.skillsList)l=new y(o,t.level,this).getSubClasses(),this.skills[l.data.kindId]=l;this.skills[g.KIND_SCATTER_ATTACK]&&delete this.skills[g.KIND_DIVIDED_ATTACK]}this.updateAttackType()}get color(){return this.gem!=null?this.gem.gemData.color:6316128}get level(){return this.m_level}set level(t){this.m_level=t}get gemLevel(){return this.gem?this.gem.gemData.gemLevel:0}get ability(){var t=this.gemLevel;return this.towerData.isMagicTower?t==0?0:this.m_level*(.8+t/5)*2:this.m_level*(1+t/10)}get power(){let t=this.level,l=S.$_tower_worth_factor,o=this.gemLevel,D=this.valueCostConst(t);return Math.round((D+Math.pow(o,l[0])*l[1])*(l[2]+o/l[3]))}buildValue(t=-1){return t==-1&&(t=this.level),parseInt(this.towerData.buildValueA+this.towerData.buildValueB*t+this.towerData.buildValueC*t*t)}buildCost(t=-1){return t==-1&&(t=this.level),parseInt(this.towerData.buildCostA+this.towerData.buildCostB*t+this.towerData.buildCostC*t*t)}valueCost(t=-1){t==-1&&(t=this.level);let l=t*this.towerData.buildCostA+(t*t+t)/2*this.towerData.buildCostB+(t*t*t+t*t*3/2+t/2)/3*this.towerData.buildCostC+this.towerData.buildCost-this.towerData.buildCostA-this.towerData.buildCostB-this.towerData.buildCostC;return Math.round(l)}valueCostConst(t=-1){t==-1&&(t=this.level);let l=t*this.towerData.buildCostAConst+(t*t+t)/2*this.towerData.buildCostBConst+(t*t*t+t*t*3/2+t/2)/3*this.towerData.buildCostCConst+this.towerData.buildCostConst-this.towerData.buildCostAConst-this.towerData.buildCostBConst-this.towerData.buildCostCConst;return Math.round(l)}buffEffect(t=-1){return t==-1&&(t=this.level),this.towerData.buffEffect*t+1}damage(t=-1){let l=0;if(t==-1&&(t=this.level),this.skills[g.KIND_CHANGE_DAMAGE]instanceof it){let o=this.skills[g.KIND_CHANGE_DAMAGE];o.isChangeBase()?l=Math.round((o.damageA+o.damageB*t+o.damageC*t*t)*o.damageRate+o.damageAdd):l=Math.round((this.towerData.damageA+this.towerData.damageB*t+this.towerData.damageC*t*t)*o.damageRate+o.damageAdd)}else l=Math.round(this.towerData.damageA+this.towerData.damageB*t+this.towerData.damageC*t*t);return l=Math.ceil(l*this.statuses[C.KIND_DAMAGE]),Math.max(l,0)}get range(){let t=0;if(this.skills[g.KIND_CHANGE_RANGE]instanceof ot){let l=this.skills[g.KIND_CHANGE_RANGE];l.isChangeBase()?t=l.range*l.rangeRate+l.rangeAdd:t=this.towerData.range*l.rangeRate+l.rangeAdd}else t=this.towerData.range;return t>0?t=Math.ceil(t*this.statuses[C.KIND_RANGE]):t=Math.floor(t*this.statuses[C.KIND_RANGE]),t}get rate(){let t=0;if(this.skills[g.KIND_CHANGE_RATE]instanceof rt){let l=this.skills[g.KIND_CHANGE_RATE];l.isChangeBase()?t=Math.round(l.rate*l.rateRate):t=Math.round(this.towerData.rate*l.rateRate)}else t=this.towerData.rate;return parseInt(Math.ceil(t*this.statuses[C.KIND_RATE]))}setGem(t){this.gem=t,this.initSkills()}updateAttackType(){let t=null;return this.m_attackType=w.EFFECT_TYPE_ALL,this.getBulletId()=="bullet100"?this.m_attackType=w.EFFECT_TYPE_LIGHTNING:this.skills[g.KIND_ATTACK_RATE]instanceof nt&&(t=this.skills[g.KIND_ATTACK_RATE],t.airRate<=0?this.m_attackType=w.EFFECT_TYPE_FLOOR:t.floorRate<=0&&(this.m_attackType=w.EFFECT_TYPE_AIR)),this.m_attackType}newBullet(){return new F(this.getBulletId())}getBulletId(){let t=null;return this.skills[g.KIND_CHANGE_BULLET]instanceof ut?(t=this.skills[g.KIND_CHANGE_BULLET],t.bulletId):this.towerData.bulletId}getInfoHtml(){return _t(this.skillInfo,this.color,!1,"14px")}}e(b,"TOWER","tower"),e(b,"GEM","gem"),e(b,"LEVEL_BUBBLE","levelBubble"),e(b,"RES_LEVEL_SECTION",5),e(b,"LEVEL_NAME",at.getLanguageStr(2003)),e(b,"STATUS_READY","statusReady"),e(b,"FRAME_REST","rest"),e(b,"FRAME_READY","ready"),e(b,"FRAME_FIRE","fire");class pt extends dt{constructor(i){super(),this.m_data=mt.getOnlyExample().getData(i)}get gemData(){return this.m_data}}const bt=["innerHTML"],ct=_("p",null,"注：升级经验为塔下一级的 buildValue 值",-1),xt=ft({__name:"towers",setup(c){const i=gt({isDefendMap:!1,towerId:"shaota",gemId:"",level:1,buildFrom:0,buildTo:1,buildPower:50}),t=U.map(S.$_towerAtt_Obj,(u,n)=>[u.name,n]),l=U.chain(S.$_global_properties.gem).toPairs().sortBy(u=>Number(Math.abs(u[1].index))).map(u=>[`${u[1].name} [${u[1].index}]`,u[0]]).value(),o=x(()=>{const u=new b(i.towerId);return u.level=i.level,i.gemId!==""&&u.setGem(new pt(i.gemId)),u}),D=()=>{k.currentMap=new k(i.isDefendMap?k.DEFEND_MAP_1:k.ENDLESS_MAP_1)},E=x(()=>{let u=0;if(i.buildFrom>i.buildTo)return NaN;for(let n=i.buildFrom+1;n<=i.buildTo;n++)u+=o.value.buildValue(n);return Math.round(u/i.buildPower)});return(u,n)=>{const R=$,d=j,L=z,K=J,h=Q,A=q,I=Z,Y=tt;return T(),G(Y,{model:r(i),"label-width":"120px"},{default:s(()=>[a(d,{label:"是否为防线"},{default:s(()=>[a(R,{modelValue:r(i).isDefendMap,"onUpdate:modelValue":n[0]||(n[0]=m=>r(i).isDefendMap=m),onChange:D},null,8,["modelValue"])]),_:1}),a(A,null,{default:s(()=>[a(h,{span:12},{default:s(()=>[a(d,{label:"塔"},{default:s(()=>[a(K,{modelValue:r(i).towerId,"onUpdate:modelValue":n[1]||(n[1]=m=>r(i).towerId=m)},{default:s(()=>[(T(!0),H(O,null,B(r(t),([m,V])=>(T(),G(L,{label:m,value:V},null,8,["label","value"]))),256))]),_:1},8,["modelValue"])]),_:1})]),_:1}),a(h,{span:12},{default:s(()=>[a(d,{label:"宝石"},{default:s(()=>[a(K,{modelValue:r(i).gemId,"onUpdate:modelValue":n[2]||(n[2]=m=>r(i).gemId=m)},{default:s(()=>[a(L,{label:"无",value:""}),(T(!0),H(O,null,B(r(l),([m,V])=>(T(),G(L,{label:m,value:V},null,8,["label","value"]))),256))]),_:1},8,["modelValue"])]),_:1})]),_:1})]),_:1}),a(A,null,{default:s(()=>[a(h,{span:8},{default:s(()=>[a(d,{label:"等级"},{default:s(()=>[a(I,{modelValue:r(i).level,"onUpdate:modelValue":n[3]||(n[3]=m=>r(i).level=m),min:1},null,8,["modelValue"])]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"等级上限"},{default:s(()=>[_("label",null,p(r(o).towerData.levelMax),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"升级经验"},{default:s(()=>[_("label",null,p(r(o).buildValue(r(o).level+1)),1)]),_:1})]),_:1})]),_:1}),a(A,null,{default:s(()=>[a(h,{span:8},{default:s(()=>[a(d,{label:"攻击力"},{default:s(()=>[_("label",null,p(r(o).damage()),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"攻击频率"},{default:s(()=>[_("label",null,p(r(o).rate),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"攻击范围"},{default:s(()=>[_("label",null,p(r(o).range),1)]),_:1})]),_:1})]),_:1}),a(d,{label:"简介"},{default:s(()=>[_("div",{innerHTML:r(o).getInfoHtml(),style:{"line-height":"1.5em"}},null,8,bt)]),_:1}),a(A,null,{default:s(()=>[a(h,{span:8},{default:s(()=>[a(d,{label:"ability"},{default:s(()=>[_("label",null,p(r(o).ability.toFixed(1)),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"power"},{default:s(()=>[_("label",null,p(r(o).power),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"buffEffect"},{default:s(()=>[_("label",null,p(r(o).buffEffect().toFixed(1)),1)]),_:1})]),_:1})]),_:1}),a(A,null,{default:s(()=>[a(h,{span:8},{default:s(()=>[a(d,{label:"buildValue"},{default:s(()=>[_("label",null,p(r(o).buildValue()),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"buildCost"},{default:s(()=>[_("label",null,p(r(o).buildCost()),1)]),_:1})]),_:1}),a(h,{span:8},{default:s(()=>[a(d,{label:"valueCost"},{default:s(()=>[_("label",null,p(r(o).valueCost()),1)]),_:1})]),_:1})]),_:1}),_("div",null,[a(d,{label:"升级计算",style:{"margin-bottom":"0 !important"}},{default:s(()=>[N(" 从 "),a(I,{modelValue:r(i).buildFrom,"onUpdate:modelValue":n[4]||(n[4]=m=>r(i).buildFrom=m),size:"small","controls-position":"right",style:{width:"5em",margin:"0.5em"}},null,8,["modelValue"]),N(" 级到 "),a(I,{modelValue:r(i).buildTo,"onUpdate:modelValue":n[5]||(n[5]=m=>r(i).buildTo=m),size:"small","controls-position":"right",style:{width:"5em",margin:"0.5em"}},null,8,["modelValue"]),N(" 级， 苦工总力量 "),a(I,{modelValue:r(i).buildPower,"onUpdate:modelValue":n[6]||(n[6]=m=>r(i).buildPower=m),size:"small","controls-position":"right",style:{width:"8em",margin:"0.5em"}},null,8,["modelValue"])]),_:1}),a(d,{style:{"margin-bottom":"0 !important"}},{default:s(()=>[N(" 需要时间："),_("label",null,p(r(ht)(r(E))),1)]),_:1}),ct])]),_:1},8,["model"])}}});export{xt as default};
