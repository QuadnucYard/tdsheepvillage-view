var D=Object.defineProperty;var T=(_,g,t)=>g in _?D(_,g,{enumerable:!0,configurable:!0,writable:!0,value:t}):_[g]=t;var e=(_,g,t)=>(T(_,typeof g!="symbol"?g+"":g,t),t);import{B as f,G as k}from"./c-BaseUnit.97afa1e7.js";import{a as u,G as S}from"./c-GlobalData.65768074.js";import{M as o,k as m,j as c}from"./c-unit.acb63781.js";const p=class extends f{constructor(t,l=1,i=1,s=0,n=null,h=null){super();e(this,"index",0);e(this,"keyId","");e(this,"m_level",0);e(this,"exp",0);e(this,"hp",0);e(this,"hpMax",0);e(this,"hpRate");e(this,"dowerSkills",null);e(this,"learnSkills",null);this.tag="Monster",t==""&&(t="dahuil");let r=t.indexOf("|");r!=-1&&(this.keyId=t,t=t.slice(0,r)),this.m_data=o.getOnlyExample().getData(t),this.m_data==null&&(this.m_data=o.getOnlyExample().getData("dahuil")),this.hpRate=i,this.updateLevelExp(l,s),this.updateSkills(n,h)}static newMonster(t){let l=null;return t&&(l=new p(t.wids,t.level,1,t.experience,t.init_skills,t.skills)),l}conflictSkillList(t){const l=[];if(t==null)return[];let i=S.$_conflict_skill_kind,s=t.data.kindId;this.skills[s]&&l.push(m.getKindName(s));for(let n=0;n<i.length;n++){const h=i[n];if(h.indexOf(s)!=-1)for(let r=0;r<h.length;r++)s!=h[r]&&this.skills[h[r]]&&l.push(m.getKindName(h[r]))}return l}getDowerSkillsList(){let t=0,l=null,i=null,s=[];for(this.isTame?i=this.dowerSkills:i=this.monsterData.skills,t=0;t<i.length;t++)l=this.getSkillById(i[t][f.SKILL_ID]),l&&s.push(l);return s}getLearnSkillsList(){let t=0,l=null,i=[];if(this.learnSkills)for(t=0;t<this.learnSkills.length;t++)l=this.getSkillById(this.learnSkills[t][f.SKILL_ID]),l&&i.push(l);return i}getSkillById(t){let l,i=null;for(l in this.skills)if(i=this.skills[l],i.data.id==t)return i;return null}updateLevelExp(t=0,l=0){this.level=t,this.exp=l}updateSkills(t=null,l=null){this.dowerSkills=t,this.learnSkills=l,this.isTame&&this.initSkills()}getAllSkills(t=null,l=null){let i=[];if(t||(t=this.dowerSkills),l||(l=this.learnSkills),this.isTame&&t&&l){for(let s=0;s<t.length;s++)i.push(t[s]);for(let s=0;s<l.length;s++)i.push(l[s])}else i=this.monsterData.skills;return i}get allSkillsScore(){let t=0,l=1,i=this.getAllSkills();for(t=0;t<i.length;t++)l*=this.getSkillScore(i[t][f.SKILL_ID],i[t][f.SKILL_LEVEL]);return l}getSkillScore(t,l){let i=null,s=S.$_skill_grade_score,n=t.indexOf("_");return t.indexOf("_")==-1?1:(i=t.slice(n+1,t.length),s[i]&&s[i][String(l)]?s[i][String(l)]:1)}get levelMax(){return this.isTame?S.$_camp_wolf_lv_max:Number.MAX_SAFE_INTEGER}get expMax(){let t=this.m_level+1;return Math.round(this.monsterData.expMaxA+this.monsterData.expMaxB*t+this.monsterData.expMaxC*t*t+this.monsterData.expMaxD*t*t*t)}get level(){return this.m_level}set level(t){this.m_level=Math.max(Math.min(t,this.levelMax),0),c.currentMap&&c.currentMap&&(this.hpMax=Math.floor((this.monsterData.hpMaxA+this.monsterData.hpMaxB*this.m_level+this.monsterData.hpMaxC*this.m_level*this.m_level)*this.hpRate)),this.hpMax<=1&&(this.hpMax=1)}refreshLevel(){this.hpMax=Math.floor((this.monsterData.hpMaxA+this.monsterData.hpMaxB*this.m_level+this.monsterData.hpMaxC*this.m_level*this.m_level)*this.hpRate*1),this.hpMax<=1&&(this.hpMax=1)}get monsterData(){return this.m_data}get power(){let t=S.$_wolf_worth_factor,l=this.hpMax,i=this.monsterData.speedBase,s=this.allSkillsScore;return Math.round(l*i*s*t[2])}initMonsterSkills(){this.isTame||this.initSkills()}initMonster(){this.initMonsterSkills(),this.initStatuses()}get skillInfo(){let t,l=0,i=null,s=null,n="";if(this.skills==null)return n;let h=[];for(t in this.skills)h.push(this.skills[t]);for(h.sort((r,x)=>r[k.DATA_KEY_INDEX]-x[k.DATA_KEY_INDEX]),l=0;l<h.length;l++)i=h[l],s=i.skillInfo,console.log(s,i.skillTag1,i.skillTag2,i.skillTag3,i.level),s!=""&&(n+=s);return n}get isTame(){return!!(this.dowerSkills||this.learnSkills)}};let a=p;e(a,"MONSTER_SAY_ARRAY",[u.getLanguageStr(1250),u.getLanguageStr(1251),u.getLanguageStr(1252),u.getLanguageStr(1253),u.getLanguageStr(1254),u.getLanguageStr(1255),u.getLanguageStr(1256),u.getLanguageStr(1257),u.getLanguageStr(1258),u.getLanguageStr(1259)]),e(a,"MONSTER","monster"),e(a,"FRAME_NAME_DEAD","dead"),e(a,"STATUS_MOVE","statusMove"),e(a,"RES_AIMING","aiming"),e(a,"PATH_PATH","pathPath"),e(a,"PHOTO_WIDTH",66),e(a,"PHOTO_HEIGHT",64),e(a,"PHOTO_ROUND",50),e(a,"PHOTO_SIZE",800),e(a,"WEIGHTILY_SIZE",487500),e(a,"CARD_RATIO",2),e(a,"CARD_WIDTH",32),e(a,"CARD_HEIGHT",40),e(a,"CARD_ROUND",10),e(a,"CARD_SIZE",400),e(a,"CARD_ROTATION",-10),e(a,"ICON_RATIO",1.5),e(a,"ICON_WIDTH",44),e(a,"ICON_HEIGHT",44),e(a,"ICON_ROUND",20),e(a,"ICON_SIZE",400),e(a,"ICON_ROTATION",-10),e(a,"PATH_NUM",5),e(a,"PATH_RATE",.01),e(a,"RE_FIND_PATH_STEP",2500);export{a as M};
