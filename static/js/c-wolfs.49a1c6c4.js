var E=Object.defineProperty;var v=(o,_,t)=>_ in o?E(o,_,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[_]=t;var s=(o,_,t)=>(v(o,typeof _!="symbol"?_+"":_,t),t);import{g as O,v as M,j as d,k as h,w as S,l as N,F as T,a1 as R,o as f,n as u,q as C,V as H,W as y,a2 as B,z as x}from"./c-.pnpm.f4627d78.js";import{G as c,M as I,n as b,h as m,l as A}from"./c-unit.eeae5d78.js";import{B as g,G as w}from"./c-BaseUnit.6559a0ad.js";import{_ as G}from"./e-index.b17edf5a.js";const D=class extends g{constructor(t,e=1,l=1,i=0,r=null,n=null){super();s(this,"index",0);s(this,"keyId","");s(this,"m_level",0);s(this,"exp",0);s(this,"hp",0);s(this,"hpMax",0);s(this,"hpRate");s(this,"dowerSkills",null);s(this,"learnSkills",null);this.tag="Monster",t==""&&(t="dahuil");let p=t.indexOf("|");p!=-1&&(this.keyId=t,t=t.slice(0,p)),this.m_data=I.getOnlyExample().getData(t),this.m_data==null&&(this.m_data=I.getOnlyExample().getData("dahuil")),this.hpRate=l,this.updateLevelExp(e,i),this.updateSkills(r,n)}static newMonster(t){let e=null;return t&&(e=new D(t.wids,t.level,1,t.experience,t.init_skills,t.skills)),e}conflictSkillList(t){const e=[];if(t==null)return[];let l=m.$_conflict_skill_kind,i=t.data.kindId;this.skills[i]&&e.push(b.getKindName(i));for(let r=0;r<l.length;r++){const n=l[r];if(n.indexOf(i)!=-1)for(let p=0;p<n.length;p++)i!=n[p]&&this.skills[n[p]]&&e.push(b.getKindName(n[p]))}return e}getDowerSkillsList(){let t=0,e=null,l=null,i=[];for(this.isTame?l=this.dowerSkills:l=this.monsterData.skills,t=0;t<l.length;t++)e=this.getSkillById(l[t][g.SKILL_ID]),e&&i.push(e);return i}getLearnSkillsList(){let t=0,e=null,l=[];if(this.learnSkills)for(t=0;t<this.learnSkills.length;t++)e=this.getSkillById(this.learnSkills[t][g.SKILL_ID]),e&&l.push(e);return l}getSkillById(t){let e,l=null;for(e in this.skills)if(l=this.skills[e],l.data.id==t)return l;return null}updateLevelExp(t=0,e=0){this.level=t,this.exp=e}updateSkills(t=null,e=null){this.dowerSkills=t,this.learnSkills=e,this.isTame&&this.initSkills()}getAllSkills(t=null,e=null){let l=[];if(t||(t=this.dowerSkills),e||(e=this.learnSkills),this.isTame&&t&&e){for(let i=0;i<t.length;i++)l.push(t[i]);for(let i=0;i<e.length;i++)l.push(e[i])}else l=this.monsterData.skills;return l}get allSkillsScore(){let t=0,e=1,l=this.getAllSkills();for(t=0;t<l.length;t++)e*=this.getSkillScore(l[t][g.SKILL_ID],l[t][g.SKILL_LEVEL]);return e}getSkillScore(t,e){let l=null,i=m.$_skill_grade_score,r=t.indexOf("_");return t.indexOf("_")==-1?1:(l=t.slice(r+1,t.length),i[l]&&i[l][String(e)]?i[l][String(e)]:1)}get levelMax(){return this.isTame?m.$_camp_wolf_lv_max:Number.MAX_SAFE_INTEGER}get expMax(){let t=this.m_level+1;return Math.round(this.monsterData.expMaxA+this.monsterData.expMaxB*t+this.monsterData.expMaxC*t*t+this.monsterData.expMaxD*t*t*t)}get level(){return this.m_level}set level(t){this.m_level=Math.max(Math.min(t,this.levelMax),0),A.currentMap&&A.currentMap&&(this.hpMax=Math.floor((this.monsterData.hpMaxA+this.monsterData.hpMaxB*this.m_level+this.monsterData.hpMaxC*this.m_level*this.m_level)*this.hpRate)),this.hpMax<=1&&(this.hpMax=1)}refreshLevel(){this.hpMax=Math.floor((this.monsterData.hpMaxA+this.monsterData.hpMaxB*this.m_level+this.monsterData.hpMaxC*this.m_level*this.m_level)*this.hpRate*1),this.hpMax<=1&&(this.hpMax=1)}get monsterData(){return this.m_data}get power(){let t=m.$_wolf_worth_factor,e=this.hpMax,l=this.monsterData.speedBase,i=this.allSkillsScore;return Math.round(e*l*i*t[2])}initMonsterSkills(){this.isTame||this.initSkills()}initMonster(){this.initMonsterSkills(),this.initStatuses()}get skillInfo(){let t,e=0,l=null,i=null,r="";if(this.skills==null)return r;let n=[];for(t in this.skills)n.push(this.skills[t]);for(n.sort((p,L)=>p[w.DATA_KEY_INDEX]-L[w.DATA_KEY_INDEX]),e=0;e<n.length;e++)l=n[e],i=l.skillInfo,console.log(i,l.skillTag1,l.skillTag2,l.skillTag3,l.level),i!=""&&(r+=i);return r}get isTame(){return!!(this.dowerSkills||this.learnSkills)}};let a=D;s(a,"MONSTER_SAY_ARRAY",[c.getLanguageStr(1250),c.getLanguageStr(1251),c.getLanguageStr(1252),c.getLanguageStr(1253),c.getLanguageStr(1254),c.getLanguageStr(1255),c.getLanguageStr(1256),c.getLanguageStr(1257),c.getLanguageStr(1258),c.getLanguageStr(1259)]),s(a,"MONSTER","monster"),s(a,"FRAME_NAME_DEAD","dead"),s(a,"STATUS_MOVE","statusMove"),s(a,"RES_AIMING","aiming"),s(a,"PATH_PATH","pathPath"),s(a,"PHOTO_WIDTH",66),s(a,"PHOTO_HEIGHT",64),s(a,"PHOTO_ROUND",50),s(a,"PHOTO_SIZE",800),s(a,"WEIGHTILY_SIZE",487500),s(a,"CARD_RATIO",2),s(a,"CARD_WIDTH",32),s(a,"CARD_HEIGHT",40),s(a,"CARD_ROUND",10),s(a,"CARD_SIZE",400),s(a,"CARD_ROTATION",-10),s(a,"ICON_RATIO",1.5),s(a,"ICON_WIDTH",44),s(a,"ICON_HEIGHT",44),s(a,"ICON_ROUND",20),s(a,"ICON_SIZE",400),s(a,"ICON_ROTATION",-10),s(a,"PATH_NUM",5),s(a,"PATH_RATE",.01),s(a,"RE_FIND_PATH_STEP",2500);const k=o=>(H("data-v-ecab5905"),o=o(),y(),o),P=k(()=>u("h1",null,"狼数据",-1)),K=k(()=>u("p",null,"前排解释：",-1)),F=k(()=>u("p",null,"pop 为狼在一波中占的容量，一般来说 pop 越大则出现机会越少。",-1)),U=k(()=>u("p",null,"charm 影响到寻路，charm 为负值越小则其他狼越会排斥它。",-1)),V=k(()=>u("p",null,"hp_factor 影响血量关于等级增长，是二次函数系数。",-1)),W={class:"sk-list"},Y={key:0,class:"sk-debuff"},$={key:1,class:"sk-buff"},Z={class:"sk-name"},X={class:"sk-id"},z={class:"sk-info"},q=O({__name:"wolfs",setup(o){console.log("init wolfs");const _=M.map(m.$_wolfAtt_Obj,(t,e)=>e).sort().map(t=>{let e=new a(t,0,0);e.initSkills();let l=e.monsterData;return{id:t,data:l,skills:Object.values(e.skills)}});return(t,e)=>{const l=B,i=R;return f(),d(T,null,[P,K,F,U,V,h(i,{data:N(_),"default-sort":{prop:"id",order:"ascending"},"table-layout":"auto",stripe:"","header-cell-style":{"text-align":"center"},"cell-style":{"text-align":"center"},"max-height":"600",style:{width:"100%","max-width":"1200px"}},{default:S(()=>[h(l,{prop:"id",label:"id",sortable:"",width:150}),h(l,{prop:"data.name",label:"name",sortable:""}),h(l,{prop:"data.speedBase",label:"speedBase",sortable:""}),h(l,{prop:"data.population",label:"population",sortable:""}),h(l,{prop:"data.charm",label:"charm",sortable:"",width:100}),h(l,{label:"size"},{default:S(()=>[h(l,{prop:"data.width",label:"width",sortable:"",width:100}),h(l,{prop:"data.height",label:"height",sortable:"",width:100})]),_:1}),h(l,{label:"hpFactor"},{default:S(()=>[h(l,{prop:"data.hpMaxA",label:"a",sortable:"",width:100}),h(l,{prop:"data.hpMaxB",label:"b",sortable:"",width:100}),h(l,{prop:"data.hpMaxC",label:"c",sortable:"",width:100})]),_:1}),h(l,{label:"skills",type:"expand",width:"60"},{default:S(r=>[u("div",W,[(f(!0),d(T,null,C(r.row.skills,n=>(f(),d("p",null,[n.isDebuff?(f(),d("span",Y,"↓")):(f(),d("span",$,"↑")),u("span",Z,x(n.name),1),u("span",X,"["+x(n.data.id)+"]",1),u("span",z,x(n.skillInfo),1)]))),256))])]),_:1})]),_:1},8,["data"])],64)}}});const et=G(q,[["__scopeId","data-v-ecab5905"]]);export{et as default};
