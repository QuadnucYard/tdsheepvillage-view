var A=Object.defineProperty;var L=(g,p,t)=>p in g?A(g,p,{enumerable:!0,configurable:!0,writable:!0,value:t}):g[p]=t;var i=(g,p,t)=>(L(g,typeof p!="symbol"?p+"":p,t),t);import{g as E,v as x,j as b,k as r,w as d,u as O,F as w,m as c,a3 as M,o as v,a4 as N}from"./c-.pnpm.69d3e3e2.js";import{G as m}from"./c-GlobalData.bbaf552d.js";import{B as f,G as T}from"./c-BaseUnit.09c4512a.js";import{a as u,M as D,G as k,h as _}from"./c-format.2ffb8bfb.js";const S=class extends f{constructor(t,e=1,l=1,s=0,a=null,h=null){super();i(this,"index");i(this,"keyId");i(this,"m_level");i(this,"exp");i(this,"hp");i(this,"hpMax");i(this,"hpRate");i(this,"dowerSkills");i(this,"learnSkills");t==""&&(t="dahuil");let o=t.indexOf("|");o!=-1&&(this.keyId=t,t=t.slice(0,o)),this.m_data=D.getOnlyExample().getData(t),this.m_data==null&&(this.m_data=D.getOnlyExample().getData("dahuil")),this.hpRate=l,this.updateLevelExp(e,s),this.updateSkills(a,h)}static newMonster(t){let e=null;return t&&(e=new S(t.wids,t.level,1,t.experience,t.init_skills,t.skills)),e}conflictSkillList(t){let e=null,l=0,s=0,a=[];if(t==null)return a;let h=m.$_conflict_skill_kind,o=t.data.kindId;for(skills[o]&&a.push(MonsterSkill.getKindName(o)),l=0;l<h.length;l++)if(e=h[l],e.indexOf(o)!=-1)for(s=0;s<e.length;s++)o!=e[s]&&skills[e[s]]&&a.push(MonsterSkill.getKindName(e[s]));return a}getDowerSkillsList(){let t=0,e=null,l=null,s=[];for(this.isTame?l=this.dowerSkills:l=this.data.skills,t=0;t<l.length;t++)e=this.getSkillById(l[t][f.SKILL_ID]),e&&s.push(e);return s}getLearnSkillsList(){let t=0,e=null,l=[];for(t=0;t<this.learnSkills.length;t++)e=this.getSkillById(this.learnSkills[t][f.SKILL_ID]),e&&l.push(e);return l}getSkillById(t){let e,l=null;for(e in skills)if(l=skills[e],l.data.id==t)return l;return null}updateLevelExp(t=0,e=0){this.level=t,this.exp=e}updateSkills(t=null,e=null){this.dowerSkills=t,this.learnSkills=e,this.isTame&&this.initSkills()}getAllSkills(t=null,e=null){let l=0,s=[];if(t||(t=this.dowerSkills),e||(e=this.learnSkills),this.isTame){for(l=0;l<t.length;l++)s.push(t[l]);for(l=0;l<e.length;l++)s.push(e[l])}else s=this.data.skills;return s}get allSkillsScore(){let t=0,e=1,l=this.getAllSkills();for(t=0;t<l.length;t++)e*=this.getSkillScore(l[t][f.SKILL_ID],l[t][f.SKILL_LEVEL]);return e}getSkillScore(t,e){let l=null,s=m.$_skill_grade_score,a=t.indexOf("_");return t.indexOf("_")==-1?1:(l=t.slice(a+1,t.length),s[l]&&s[l][String(e)]?s[l][String(e)]:1)}get levelMax(){return this.isTame?m.$_camp_wolf_lv_max:Number.MAX_SAFE_INTEGER}get expMax(){let t=this.m_level+1;return Math.round(this.monsterData.expMaxA+this.monsterData.expMaxB*t+this.monsterData.expMaxC*t*t+this.monsterData.expMaxD*t*t*t)}get level(){return this.m_level}set level(t){this.m_level=Math.max(Math.min(t,this.levelMax),0),k.currentMap&&k.currentMap&&(this.hpMax=parseInt((this.monsterData.hpMaxA+this.monsterData.hpMaxB*this.m_level+this.monsterData.hpMaxC*this.m_level*this.m_level)*this.hpRate)),this.hpMax<=1&&(this.hpMax=1)}refreshLevel(){this.hpMax=parseInt((this.monsterData.hpMaxA+this.monsterData.hpMaxB*this.m_level+this.monsterData.hpMaxC*this.m_level*this.m_level)*this.hpRate*k.currentMap.unkennelSoloDifficulty),this.hpMax<=1&&(this.hpMax=1)}get monsterData(){return this.m_data}get power(){let t=m.$_wolf_worth_factor,e=this.hpMax,l=this.monsterData.speedBase,s=this.allSkillsScore;return Math.round(e*l*s*t[2])}initMonsterSkills(){this.isTame||this.initSkills()}initMonster(){this.initMonsterSkills(),this.initStatuses()}get skillInfo(){let t,e=0,l=null,s=null,a="";if(this.skills==null)return a;let h=[];for(t in this.skills)h.push(this.skills[t]);for(h.sort((o,I)=>o[T.DATA_KEY_INDEX]-I[T.DATA_KEY_INDEX]),e=0;e<h.length;e++)l=h[e],s=l.skillInfo,console.log(s,l.skillTag1,l.skillTag2,l.skillTag3,l.level),s!=""&&(a+=s);return a}get isTame(){return!!(this.dowerSkills||this.learnSkills)}};let n=S;i(n,"MONSTER_SAY_ARRAY",[u.getLanguageStr(1250),u.getLanguageStr(1251),u.getLanguageStr(1252),u.getLanguageStr(1253),u.getLanguageStr(1254),u.getLanguageStr(1255),u.getLanguageStr(1256),u.getLanguageStr(1257),u.getLanguageStr(1258),u.getLanguageStr(1259)]),i(n,"MONSTER","monster"),i(n,"FRAME_NAME_DEAD","dead"),i(n,"STATUS_MOVE","statusMove"),i(n,"RES_AIMING","aiming"),i(n,"PATH_PATH","pathPath"),i(n,"PHOTO_WIDTH",66),i(n,"PHOTO_HEIGHT",64),i(n,"PHOTO_ROUND",50),i(n,"PHOTO_SIZE",800),i(n,"WEIGHTILY_SIZE",487500),i(n,"CARD_RATIO",2),i(n,"CARD_WIDTH",32),i(n,"CARD_HEIGHT",40),i(n,"CARD_ROUND",10),i(n,"CARD_SIZE",400),i(n,"CARD_ROTATION",-10),i(n,"ICON_RATIO",1.5),i(n,"ICON_WIDTH",44),i(n,"ICON_HEIGHT",44),i(n,"ICON_ROUND",20),i(n,"ICON_SIZE",400),i(n,"ICON_ROTATION",-10),i(n,"PATH_NUM",5),i(n,"PATH_RATE",.01),i(n,"RE_FIND_PATH_STEP",2500);const R=c("h1",null,"狼数据",-1),C=c("p",null,"前排解释：",-1),H=c("p",null,"pop 为狼在一波中占的容量，一般来说 pop 越大则出现机会越少。",-1),y=c("p",null,"charm 影响到寻路，charm 为负值越小则其他狼越会排斥它。",-1),B=c("p",null,"hp_factor 影响血量关于等级增长，是二次函数系数。",-1),G=["innerHTML"],V=E({__name:"wolfs",setup(g){console.log("init wolfs");const p=x.map(m.$_wolfAtt_Obj,(l,s)=>s).sort().map(l=>{let s=new n(l,0,0);s.initSkills();let a=s.monsterData;return{id:l,data:a,skills:x.map(s.skills,(h,o)=>`<p>${e(h)}</p>`).join("")}});function t(l){return l.isDebuff?_("↓",0,!0,"","monospace"):_("↑",16711680,!0,"","monospace")}function e(l){let a=[];return a.push(t(l)+" "+_(l.name,64,!0,"")+"&nbsp;"),a.push(_(`[${l.data.id}] `,7829367,!0,"smaller")),a.push(_(l.skillInfo,3355443,!1,"smaller")),l.skillTag1&&a.push(_(l.skillTag1,4210928,!1,"small")),l.skillTag2&&a.push(_(l.skillTag2,4210928,!1,"small")),l.skillTag3&&a.push(_(l.skillTag3,4210928,!1,"small")),a.join("")}return(l,s)=>{const a=N,h=M;return v(),b(w,null,[R,C,H,y,B,r(h,{data:O(p),"default-sort":{prop:"id",order:"ascending"},"table-layout":"auto",stripe:"","header-cell-style":{"text-align":"center"},"cell-style":{"text-align":"center"},"max-height":"600",style:{width:"100%","max-width":"1200px"}},{default:d(()=>[r(a,{prop:"id",label:"id",sortable:""}),r(a,{prop:"data.name",label:"name",sortable:""}),r(a,{prop:"data.speedBase",label:"speedBase",sortable:""}),r(a,{prop:"data.population",label:"population",sortable:""}),r(a,{prop:"data.charm",label:"charm",sortable:""}),r(a,{label:"size"},{default:d(()=>[r(a,{prop:"data.width",label:"width",sortable:""}),r(a,{prop:"data.height",label:"height",sortable:""})]),_:1}),r(a,{label:"hpFactor"},{default:d(()=>[r(a,{prop:"data.hpMaxA",label:"a",sortable:""}),r(a,{prop:"data.hpMaxB",label:"b",sortable:""}),r(a,{prop:"data.hpMaxC",label:"c",sortable:""})]),_:1}),r(a,{label:"skills",type:"expand",width:"60"},{default:d(o=>[c("div",{innerHTML:o.row.skills,style:{"margin-left":"2em"}},null,8,G)]),_:1})]),_:1},8,["data"])],64)}}});export{V as default};
